#!/bin/bash

# Managed by Ansible

set -u
set -o pipefail

# --------------------------------------------------------------------------- #
#                       VARIABLE DEFINITIONS
# --------------------------------------------------------------------------- #

PATH=/usr/bin:/bin:/usr/sbin:/sbin

readonly _arg="${1:-x}"
readonly _print_to="${2:-x}"

readonly _filter_set='blackhole'

# --------------------------------------------------------------------------- #
#                       FUNCTIONS
# --------------------------------------------------------------------------- #

errout() {
        local _msg="${0##*/} error: ${1}"
        printf '%s\n' "${_msg}" >&2
        exit 1
}

print_usage_and_exit() {
        printf '%s\n' "Usage: ${0} ip_address" >&2
        exit 1
}

say() {
        local _msg="${0##*/} info: ${1}"

        if [ "${_print_to}" == "logonly" ] ; then
                logger -p local3.info "${_msg}"
        else
                printf '%s\n' "${_msg}"
        fi
}

audit_input_arg() {
        local _reg='^([1-2]?[0-9]?[0-9]\.){3}[1-2]?[0-9]?[0-9]$'

        if [ "${_arg:-x}" == "x" ] ; then
                print_usage_and_exit
        fi

        if [ "${_arg}" == "0.0.0.0" ] ; then
                errout 'No way, 0.0.0.0 is too broad'
        fi

        if grep -Eq "${_reg}" <<<"${_arg}" ; then
                :
        else
                errout 'That does not look like an IP address'
        fi
}

confirm_needs_processing() {
        local _regex="val.*\"${_ip_regex}\""
        local _rc

        nft --json list set inet filter ${_filter_set} |
        jq . |
        grep -E "${_regex}" \
        > /dev/null
        _rc=${?}

        if [ ${_rc} -eq 0 ] ; then
                say 'IP already blocked'
                return ${_rc}
        elif [ ${_rc} -eq 1 ] ; then
                return ${_rc}
        else
                errout 'Problem quering firewall rules'
        fi
}

add_drop_rule() {
        nft add element inet filter ${_filter_set} "{ ${_ip} }"

        if [ ${?} -ne 0 ] ; then
                errout 'Problem adding firewall rule'
        fi
}

# --------------------------------------------------------------------------- #
#                       MAIN LOGIC
# --------------------------------------------------------------------------- #

audit_input_arg

# Confirm the IP is not already being blocked
readonly _ip_regex="${_arg//./\\.}"
confirm_needs_processing

if [ ${?} -eq 1 ] ; then
        readonly _ip="${_arg}"
        add_drop_rule
        say "IP ${_ip} added to ${_filter_set}"
fi

exit 0
