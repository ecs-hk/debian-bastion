#!/bin/bash

# Managed by Ansible

# Call this script with the 'logonly' arg in order to write output
# and errors to rsyslog. If not called with this arg, output and
# errors will go to stdout / stderr.

set -u
set -o pipefail

# -------------------------------------------------------------------------- #
#                       VARIABLE DEFINITIONS
# -------------------------------------------------------------------------- #

PATH=/usr/bin:/bin:/usr/local/sbin

readonly _od="$(mktemp -d -p /tmp ${0##*/}.XXXXXX)"
readonly _ips="${_od}/ip-addresses"

readonly _print_to="${1:-x}"

# -------------------------------------------------------------------------- #
#                       FUNCTIONS
# -------------------------------------------------------------------------- #

errout() {
        local _msg="${0##*/} error: ${1}"

        if [ "${_print_to}" == "logonly" ] ; then
                logger -p local3.err "${_msg}"
        else
                printf '%s\n' "${_msg}" >&2
        fi

        exit 1
}

say() {
        local _msg="${0##*/} info: ${1}"

        if [ "${_print_to}" == "logonly" ] ; then
                :
        else
                printf '%s\n' "${_msg}"
        fi
}

cleanup() {
        rm -fr "${_od}"
}

# --------------------------------------------------------------------------- #
#                       CLEANUP AND SIGNAL HANDLING
# --------------------------------------------------------------------------- #

trap 'cleanup' EXIT
trap 'exit 2' HUP INT QUIT TERM

# -------------------------------------------------------------------------- #
#                       MAIN LOGIC
# -------------------------------------------------------------------------- #

get-ssh-baddies 'n' "${_print_to}" > "${_ips}"
[ ${?} -ne 0 ] && errout 'Problem running SSH baddies script'

# If the file is empty, quietly get out.
[ ! -s "${_ips}" ] && exit 0

while IFS='' read -r _line || [ -n "${_line}" ] ; do
        say "Baddie detected, IP ${_line}"
        block-ip "${_line}" "${_print_to}"
        [ ${?} -ne 0 ] && errout "Problem blocking IP ${_line}"
done < "${_ips}"

exit 0
